/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Study.Java.chapter_02.srp;

import Study.Java.chapter_02.cohesion.BankStatementProcessor;
import Study.Java.chapter_02.cohesion.BankTransaction;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.Month;
import java.util.ArrayList;
import java.util.List;

public class BankTransactionAnalyzerSRP {
    private static final String RESOURCES = "app/src/main/resources/";
    private static BankStatementCSVParser bankStatementParser = new BankStatementCSVParser();

    public static void main(String[] args) throws IOException {
        final Study.Java.chapter_02.cohesion.BankStatementCSVParser bankStatementParser = new Study.Java.chapter_02.cohesion.BankStatementCSVParser();

        final String fileName = "bank-data-simple.csv";
        final Path path = Paths.get(RESOURCES + fileName);
        final List<String> lines = Files.readAllLines(path);

        final List<Study.Java.chapter_02.cohesion.BankTransaction> bankTransactions = bankStatementParser.parseLinesFromCSV(lines);

        System.out.println("The total for all transactions is " + calculateTotalAmount(bankTransactions));
        System.out.println("Transactions in January " + selectInMonth(bankTransactions, Month.JANUARY));

    }

    private static List<Study.Java.chapter_02.cohesion.BankTransaction> selectInMonth(List<Study.Java.chapter_02.cohesion.BankTransaction> bankTransactions, Month month) {
        final List<Study.Java.chapter_02.cohesion.BankTransaction> bankTransactionsInMonth = new ArrayList<>();
        for (final Study.Java.chapter_02.cohesion.BankTransaction bankTransaction : bankTransactions) {
            if (bankTransaction.getDate().getMonth() == month) {
                bankTransactionsInMonth.add(bankTransaction);
            }
        }
        return bankTransactionsInMonth;
    }

    private static double calculateTotalAmount(List<Study.Java.chapter_02.cohesion.BankTransaction> bankTransactions) {
        double total = 0;
        for (final BankTransaction bankTransaction : bankTransactions) {
            total += bankTransaction.getAmount();
        }
        return total;
    }

}
